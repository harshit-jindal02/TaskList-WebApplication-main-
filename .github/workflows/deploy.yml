name: Full Deploy to EC2/Minikube
 
on:
  workflow_call:
    # no inputs section any more
    secrets:
      ec2_user:
        description: "SSH user for EC2"
        required: true
      ec2_host:
        description: "EC2 host (IP or DNS)"
        required: true
      ec2_ssh_key:
        description: "SSH private key for EC2"
        required: true
  workflow_dispatch:
 
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ec2_ssh_key }}
 
      - name: SSH & Deploy to Minikube
        run: |
          ssh -o StrictHostKeyChecking=no \
              ${{ secrets.ec2_user }}@${{ secrets.ec2_host }} << 'EOF'
            set -eux
            # 3️⃣ Clone TaskWeb app
            if [ -d "$HOME/taskweb-insightAssist" ]; then
              cd "$HOME/taskweb-insightAssist"
              git pull
            else
              git clone https://github.com/harshit-jindal02/TaskList-WebApplication-main-.git "$HOME/taskweb-insightAssist"
              cd "$HOME/taskweb-insightAssist"
            fi
            # 4️⃣ Build images inside Minikube’s Docker daemon
            eval \$(minikube docker-env)
            docker build -t taskweb/backend:latest backend/Flask-ToDo-List
            docker build -t taskweb/frontend:latest frontend/Simple-Todos-In-React-JS
            # 5️⃣ Apply manifest & restart to trigger OTel injection
            kubectl apply -f ~/traceAssist/k8s/taskweb-deploy.yaml
            kubectl rollout restart deployment backend frontend -n traceassist
            # 6️⃣ Port-forward in background so you can curl
            sleep 25
            nohup kubectl port-forward --address 0.0.0.0 svc/frontend-svc -n traceassist 8080:80 &
            nohup kubectl port-forward --address 0.0.0.0 svc/backend-svc  -n traceassist 5000:5000 &
            sleep 5
            curl http://localhost:5000/api/todos
            curl http://localhost:8080
          EOF